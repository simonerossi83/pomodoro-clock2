[{"/Users/simon/Desktop/DevProjects/pomodoro-clock/src/index.js":"1","/Users/simon/Desktop/DevProjects/pomodoro-clock/src/App.js":"2","/Users/simon/Desktop/DevProjects/pomodoro-clock/src/reportWebVitals.js":"3","/Users/simon/Desktop/DevProjects/pomodoro-clock2/src/index.js":"4","/Users/simon/Desktop/DevProjects/pomodoro-clock2/src/App.js":"5","/Users/simon/Desktop/DevProjects/pomodoro-clock2/src/reportWebVitals.js":"6"},{"size":500,"mtime":1615935492634,"results":"7","hashOfConfig":"8"},{"size":6736,"mtime":1616018836636,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1615932604634,"results":"10","hashOfConfig":"8"},{"size":500,"mtime":1615935492634,"results":"11","hashOfConfig":"12"},{"size":6736,"mtime":1616018836636,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1615932604634,"results":"14","hashOfConfig":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qwuimo",{"filePath":"17","messages":"18","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1l8e2u2",{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/simon/Desktop/DevProjects/pomodoro-clock/src/index.js",[],"/Users/simon/Desktop/DevProjects/pomodoro-clock/src/App.js",["28","29","30","31","32"],"/Users/simon/Desktop/DevProjects/pomodoro-clock/src/reportWebVitals.js",[],"/Users/simon/Desktop/DevProjects/pomodoro-clock2/src/index.js",[],"/Users/simon/Desktop/DevProjects/pomodoro-clock2/src/App.js",["33","34","35","36","37"],"import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\nconst Break = props =>{\n  return(\n    <>\n  <div id=\"break-label\" className=\"row text-center\">\n      <div className=\"col\">\n    <h2>Break length</h2>\n      </div>\n    </div>\n      <div className=\"row text-center\">\n        <div className=\"col\">\n        <FontAwesomeIcon icon={[\"fas\", \"long-arrow-alt-up\"]} id=\"break-increment\" onClick={props.increment} className=\"icon\"/>\n      <div id=\"break-length\" className=\"inlineSpan\">{props.length}</div>\n      <FontAwesomeIcon icon={[\"fas\", \"long-arrow-alt-down\"]} id=\"break-decrement\" onClick={props.decrement} className=\"icon\"/>\n      </div>  \n       </div>\n      </>\n  )\n}\n\nconst Session = props =>{\n  return(\n  <>\n    <div id=\"session-label\" className=\"row text-center\">\n      <div className=\"col\">\n    <h2>Session length</h2>\n         </div>\n    </div>\n      <div className=\"row text-center\">\n        <div className=\"col\">\n      \n      <FontAwesomeIcon icon={[\"fas\", \"long-arrow-alt-up\"]} id=\"session-increment\" onClick={props.increment} className=\"icon\"/>\n      <div id=\"session-length\" className=\"inlineSpan\">{props.length}</div>\n      <FontAwesomeIcon icon={[\"fas\", \"long-arrow-alt-down\"]} id=\"session-decrement\" onClick={props.decrement} className=\"icon\"/>\n  </div>\n    </div>\n    </>\n  )\n}\n//-------------------------------- FORMATTAZIONE DEL TEMPO -----------------------------------\nfunction formatTime(time) {\n  let minutes = Math.floor(time/60);\n  let seconds = time % 60;\n  \n  if (seconds < 10) {\n    seconds = `0${seconds}`;\n  }\n  \n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n\n  return `${minutes}:${seconds}`;\n}\n\n\n\n//----------- DEFINIZIONE DELL'OROLOGIO VERO E PROPRIO ----------------------------------------\n\nfunction App() {\n  const [breakLength, setBreakLength] = React.useState(5);\n  const [breakTimer, setBreakTimer] = React.useState(300);   \n  const [sessionLength, setSessionLength] = React.useState(25);\n  const [sessionTimer, setSessionTimer] = React.useState(1500); \n  const [play, setPlay] = React.useState(false);\n  const [reset, setReset] = React.useState(0);\n  const [isSession, setIsSession] = React.useState(true);\n  \n  \n  //-------------GESTISCO INCREMENTO -------------------\n  const handleClickIncrement = event => {\n    switch (event.target.id) {\n      case \"break-increment\": \n         if(breakLength === 60) {\n          event.target.id.disabled = true;\n          break;\n        } else\n        setBreakLength(prev => prev + 1); \n        setBreakTimer(prev => prev + 60);\n        break;\n      case \"session-increment\": \n         if(sessionLength === 60) {\n          event.target.id.disabled = true;\n          break;\n        } else\n        setSessionLength(prev => prev + 1); \n        setSessionTimer(prev => prev + 60);\n        break;\n    }\n    \n  }\n     //-------------GESTISCO DECREMENTO -------------------\n    const handleClickDecrement = event => {\n    switch (event.target.id) {\n      case \"break-decrement\": \n        if(breakLength === 1) {\n          event.target.id.disabled = true;\n          break;\n        } else\n          setBreakLength(prev => prev - 1); \n          setBreakTimer(prev => prev - 60);\n        break;\n      case \"session-decrement\": \n        if(sessionLength === 1) {\n          event.target.id.disabled = true;\n          break;\n        } else\n        setSessionLength(prev => prev - 1); \n        setSessionTimer(prev => prev - 60);\n        break;\n    }\n    \n  }\n    \n //-------------- GESTISCO TASTO PLAY ----------------\n    const handlePressPlay = () => {\n           setPlay(prev => !prev);\n    }\n    \n    \n    //------------- GESTISTCO TASTO RESET --------------\n    const handlePressReset = () => {\n      setBreakLength(5);\n      setBreakTimer(300);\n      setSessionLength(25);\n      setSessionTimer(1500);\n      setPlay(false);\n      setReset(1);\n      setIsSession(true);\n      document.getElementById('beep').pause();\n      document.getElementById('beep').currentTime = 0;\n    }\n    \n    //---------------------------  CONTO ALLA ROVESCIA ----------------------------------\n \n    \n  React.useEffect(() => {\n    \n    if(play && isSession) {  //sono nella Session\n    console.log(document.getElementById('time-left').innerText);\n    let myInterval = setInterval(() => {\n      if(sessionTimer <= sessionLength)\n        document.getElementById('beep').play();\n      if(sessionTimer < sessionLength){  // AAAAAAAAAAAAA DA RIPORTARE A sessionLength!!!!!!\n        \n        clearInterval(myInterval);\n        \n        setIsSession(false);\n        setSessionTimer(sessionLength*60);\n       \n      }\n      else\n      setSessionTimer(prev => prev-1);\n  }, 1000)\n    return () => {\n      clearInterval(myInterval);\n    };\n}\n    if(play && !isSession)\n      {\n        let myInterval = setInterval(() => {\n           if(breakTimer <= breakLength)\n             document.getElementById('beep').play();\n      if(breakTimer < breakLength){  // AAAAAAAAAAAAA DA RIPORTARE A breakLength!!!!!!!!!!\n        clearInterval(myInterval);\n        \n        setIsSession(true);\n        setBreakTimer(breakLength*60);\n      }\n      else\n      setBreakTimer(prev => prev-1);\n  }, 1000)\n    return () => {\n      clearInterval(myInterval);\n    };\n}\n      \n                \n  },[play,isSession,sessionTimer,breakTimer]);\n  \n  \n  return (\n     <div className=\"banner container-fluid\">\n      <div id=\"clock\">\n      <div className=\"row\">\n        <div className=\"col text-center\">\n      <h1>My pomodoro clock!</h1>\n          <audio id=\"beep\" controls src=\"https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3\" ></audio>\n        </div>\n        </div>\n      <div className=\"row\">\n        <div className=\"col\">\n      <Break length={breakLength} increment={handleClickIncrement} decrement={handleClickDecrement}/>\n       </div>\n        <div className=\"col\">\n      <Session length={sessionLength} increment={handleClickIncrement} decrement={handleClickDecrement}/>\n          \n          </div>\n        </div>\n      <div  className=\"row\">\n         <div className=\"col text-right\">\n        <h2 id=\"timer-label\">{isSession ? \"Session\" : \"Break\"}</h2>\n         </div>\n        <div id=\"time-left\" className=\"col text-start\">\n          {isSession ? formatTime(sessionTimer) : formatTime(breakTimer)}\n        </div>\n        </div>\n        <div className=\"row text-center\">\n          <div className=\"col\">\n          <FontAwesomeIcon icon={[\"fas\", \"play\"]} id=\"start_stop\" onClick={handlePressPlay} className=\"icon\"/>\n          <FontAwesomeIcon icon={[\"fas\", \"history\"]} id=\"reset\" onClick={handlePressReset} className=\"icon\"/>\n         </div>\n         </div> \n      </div>\n      </div>\n   )\n \n}\n\n\n\nexport default App;\n","/Users/simon/Desktop/DevProjects/pomodoro-clock2/src/reportWebVitals.js",[],{"ruleId":"38","severity":1,"message":"39","line":1,"column":8,"nodeType":"40","messageId":"41","endLine":1,"endColumn":12},{"ruleId":"38","severity":1,"message":"42","line":71,"column":10,"nodeType":"40","messageId":"41","endLine":71,"endColumn":15},{"ruleId":"43","severity":1,"message":"44","line":77,"column":5,"nodeType":"45","messageId":"46","endLine":94,"endColumn":6},{"ruleId":"43","severity":1,"message":"44","line":99,"column":5,"nodeType":"45","messageId":"46","endLine":116,"endColumn":6},{"ruleId":"47","severity":1,"message":"48","line":184,"column":5,"nodeType":"49","endLine":184,"endColumn":45,"suggestions":"50"},{"ruleId":"38","severity":1,"message":"39","line":1,"column":8,"nodeType":"40","messageId":"41","endLine":1,"endColumn":12},{"ruleId":"38","severity":1,"message":"42","line":71,"column":10,"nodeType":"40","messageId":"41","endLine":71,"endColumn":15},{"ruleId":"43","severity":1,"message":"44","line":77,"column":5,"nodeType":"45","messageId":"46","endLine":94,"endColumn":6},{"ruleId":"43","severity":1,"message":"44","line":99,"column":5,"nodeType":"45","messageId":"46","endLine":116,"endColumn":6},{"ruleId":"47","severity":1,"message":"48","line":184,"column":5,"nodeType":"49","endLine":184,"endColumn":45,"suggestions":"51"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'reset' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'breakLength' and 'sessionLength'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSessionTimer' needs the current value of 'sessionLength'.","ArrayExpression",["52"],["53"],{"desc":"54","fix":"55"},{"desc":"54","fix":"56"},"Update the dependencies array to be: [play, isSession, sessionTimer, breakTimer, sessionLength, breakLength]",{"range":"57","text":"58"},{"range":"59","text":"58"},[5311,5351],"[play, isSession, sessionTimer, breakTimer, sessionLength, breakLength]",[5311,5351]]